import{S as y}from"./Sidebar-Dlc5xLZ6.js";import{B as w}from"./Back-DPqJhWKa.js";import{_ as V,c as l,b as v,a as s,w as x,d as t,g,h as S,i,j as U,e as d,k as I,l as R,t as E,v as n,o as a,r as f}from"./index-B0CyqVYp.js";import{_ as q,a as C,b as D}from"./langchain-icon-D5kr9sac.js";const M={name:"Frameworks",components:{Sidebar:y,Back:w},data(){return{baseImage:"",errorMessage:"",gpuSupport:!1,framework:"",useRequeriments:!1,dependencies:"",envVars:"",ports:"",startupScript:""}},methods:{async submitForm(){if(!this.baseImage){this.errorMessage="Por favor, escolha uma imagem base";return}this.errorMessage="";const p={baseImage:this.baseImage,framework:this.framework,dependencies:this.dependencies,gpuSupport:this.gpuSupport,envVars:this.envVars,ports:this.ports,startupScript:this.startupScript,useRequirements:this.useRequeriments};try{const e=await fetch("http://127.0.0.1:5000/createDockerfile",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)});if(!e.ok)throw new Error("Erro ao gerar o Dockerfile");const m=await e.blob(),u=URL.createObjectURL(m),o=document.createElement("a");o.href=u,o.download="Dockerfile",document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(u)}catch(e){console.error("Erro ao baixar o Dockerfile:",e)}}}},h={class:"dockerfile-page"},B={class:"container"},N={class:"checkbox"},j={class:"input-base-image"},F={class:"top"},L={key:0,class:"mid"},O={class:"mid"},P={class:"bottom"},T={key:1,class:"error-message"},A={class:"input-config"},z={class:"input-framework-or-library"},G={class:"top"},H=["value"],J={class:"mid"},Y=["value"],K={class:"bottom"},Q={class:"input-dependencies"},W={class:"checkbox"},X={class:"input-env"},Z={class:"input-ports"},_={class:"input-startup-script"};function $(p,e,m,u,o,b){const k=f("Sidebar"),c=f("Back");return a(),l("div",h,[v(k),s("div",B,[v(c),s("form",{class:"interface",onSubmit:e[13]||(e[13]=x((...r)=>b.submitForm&&b.submitForm(...r),["prevent"]))},[e[31]||(e[31]=s("h1",null,"Crie seu dockerfile",-1)),s("div",N,[t(s("input",{type:"checkbox",id:"gpuCheckbox","onUpdate:modelValue":e[0]||(e[0]=r=>o.gpuSupport=r)},null,512),[[g,o.gpuSupport]]),e[14]||(e[14]=s("label",{class:"labelCheckbox",for:"gpuCheckbox"},"Você está utilizando GPU em seu modelo?",-1))]),e[32]||(e[32]=s("h2",null,"Escolha a imagem base",-1)),s("div",j,[s("div",F,[e[15]||(e[15]=s("img",{class:"base-logo",src:S},null,-1)),e[16]||(e[16]=s("label",{for:"rad1"},"Python",-1)),t(s("input",{type:"radio",name:"base-image",class:"radio",id:"rad1",value:"python:latest","onUpdate:modelValue":e[1]||(e[1]=r=>o.baseImage=r)},null,512),[[i,o.baseImage]])]),o.gpuSupport?d("",!0):(a(),l("div",L,[e[17]||(e[17]=s("img",{class:"base-logo",src:U},null,-1)),e[18]||(e[18]=s("label",{for:"rad4"},"Nvidia CUDA",-1)),t(s("input",{type:"radio",name:"base-image",class:"radio",id:"rad4",value:"nvidia/cuda:11.8-cudnn8-devel-ubuntu20.04","onUpdate:modelValue":e[2]||(e[2]=r=>o.baseImage=r)},null,512),[[i,o.baseImage]])])),s("div",O,[e[19]||(e[19]=s("img",{class:"base-logo",src:I},null,-1)),e[20]||(e[20]=s("label",{for:"rad4"},"Ubuntu",-1)),t(s("input",{type:"radio",name:"base-image",class:"radio",id:"rad2",value:"ubuntu:latest","onUpdate:modelValue":e[3]||(e[3]=r=>o.baseImage=r)},null,512),[[i,o.baseImage]])]),s("div",P,[e[21]||(e[21]=s("img",{class:"base-logo",src:R},null,-1)),e[22]||(e[22]=s("label",{for:"rad4"},"Debian",-1)),t(s("input",{type:"radio",name:"base-image",class:"radio",id:"rad3",value:"debian:latest","onUpdate:modelValue":e[4]||(e[4]=r=>o.baseImage=r)},null,512),[[i,o.baseImage]])]),o.errorMessage?(a(),l("div",T,E(o.errorMessage),1)):d("",!0)]),s("div",A,[e[29]||(e[29]=s("h2",null,"Escolha o framework/biblioteca que você está utilizando",-1)),s("div",z,[s("div",G,[e[23]||(e[23]=s("img",{class:"base-logo",src:q},null,-1)),e[24]||(e[24]=s("label",{for:"rad1"},"Pytorch",-1)),t(s("input",{type:"radio",name:"framework",class:"radio",id:"rad5",value:o.gpuSupport?"torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cuda/11.8":"torch torchvision torchaudio","onUpdate:modelValue":e[5]||(e[5]=r=>o.framework=r)},null,8,H),[[i,o.framework]])]),s("div",J,[e[25]||(e[25]=s("img",{class:"base-logo",src:C},null,-1)),e[26]||(e[26]=s("label",{for:"rad4"},"Tensorflow",-1)),t(s("input",{type:"radio",name:"framework",class:"radio",id:"rad6",value:o.gpuSupport?"tensorflow-gpu":"tensorflow","onUpdate:modelValue":e[6]||(e[6]=r=>o.framework=r)},null,8,Y),[[i,o.framework]])]),s("div",K,[e[27]||(e[27]=s("img",{class:"base-logo",src:D},null,-1)),e[28]||(e[28]=s("label",{for:"rad4"},"Langchain",-1)),t(s("input",{type:"radio",name:"framework",class:"radio",id:"rad7",value:"pip install langchain[all]","onUpdate:modelValue":e[7]||(e[7]=r=>o.framework=r)},null,512),[[i,o.framework]])])])]),e[33]||(e[33]=s("h2",null,"Escolha o método de inserir as dependências",-1)),s("div",Q,[s("div",W,[t(s("input",{type:"checkbox",id:"useRequeriments","onUpdate:modelValue":e[8]||(e[8]=r=>o.useRequeriments=r)},null,512),[[g,o.useRequeriments]]),e[30]||(e[30]=s("label",{class:"labelCheckbox",for:"useRequeriments"},"Deseja utilizar requeriments.txt?",-1))]),o.useRequeriments?d("",!0):t((a(),l("input",{key:0,class:"dependencies",type:"text",placeholder:"Insira as dependências (Exemplo: numpy seaborn matplotlib)","onUpdate:modelValue":e[9]||(e[9]=r=>o.dependencies=r)},null,512)),[[n,o.dependencies]])]),e[34]||(e[34]=s("h2",null,"Insira as váriaveis de ambiente",-1)),s("div",X,[t(s("input",{class:"envVars",type:"text",placeholder:"Insira as váriaveis de ambiente (Exemplo: MY_ENV_VAR=value1,ANOTHER_VAR=value2)","onUpdate:modelValue":e[10]||(e[10]=r=>o.envVars=r)},null,512),[[n,o.envVars]])]),e[35]||(e[35]=s("h2",null,"Insira as portas que seu modelo vai rodar",-1)),s("div",Z,[t(s("input",{class:"ports",type:"text",placeholder:"Insira a porta que o container vai rodar (Exemplo: 8080,9090)","onUpdate:modelValue":e[11]||(e[11]=r=>o.ports=r)},null,512),[[n,o.ports]])]),e[36]||(e[36]=s("h2",null,"Insira o comando para rodar seu modelo",-1)),s("div",_,[t(s("input",{class:"startupScript",type:"text",placeholder:"Insira o comando que vai rodar sua aplicação (Exemplo: python app.py)","onUpdate:modelValue":e[12]||(e[12]=r=>o.startupScript=r)},null,512),[[n,o.startupScript]])]),e[37]||(e[37]=s("div",{class:"input-submit"},[s("input",{class:"submit",type:"submit",value:"Criar dockerfile"})],-1))],32)])])}const te=V(M,[["render",$],["__scopeId","data-v-ec259ed7"]]);export{te as default};
